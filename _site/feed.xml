<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://dongdongbh.tech/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dongdongbh.tech/" rel="alternate" type="text/html" /><updated>2019-01-30T13:29:55+08:00</updated><id>https://dongdongbh.tech/feed.xml</id><title type="html">Dongda’s homepage</title><subtitle>Homepage of Dongda Li, an amazing website.</subtitle><author><name>Dongda Li</name><email>dongdongbhbh@gmail.com</email></author><entry><title type="html">Create your website on cloud</title><link href="https://dongdongbh.tech/resource/create-website/" rel="alternate" type="text/html" title="Create your website on cloud" /><published>2019-01-28T00:00:00+08:00</published><updated>2019-01-28T00:00:00+08:00</updated><id>https://dongdongbh.tech/resource/create-website</id><content type="html" xml:base="https://dongdongbh.tech/resource/create-website/">&lt;h2 id=&quot;create-your-website-on-virtual-private-servervps&quot;&gt;Create your website on Virtual Private Server(VPS)&lt;/h2&gt;

&lt;p&gt;We host our website on cloud VPS, our website based on Jekyll, so we can simply write our pages by Markdown. For the convenience of updating our site, we build Git server on VPS to auto publish it.&lt;/p&gt;

&lt;h3 id=&quot;requirements&quot;&gt;Requirements&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;a VPS (e.g. google cloud VM instance)&lt;/li&gt;
  &lt;li&gt;a domain name (e.g. dongdongbh.tech)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;steps&quot;&gt;Steps&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;ssh login your server(assume the system of your server is Linux);&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;install &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;Jekyll&lt;/a&gt;, Git, &lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/tutorials/install/&quot;&gt;Nginx&lt;/a&gt;;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;setup Nginx in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/nginx/sites-enabled/default&lt;/code&gt;, write:&lt;/p&gt;

    &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;##&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# You should look at the following URL's in order to grasp a solid understanding&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# of Nginx configuration files in order to fully unleash the power of Nginx.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# http://wiki.nginx.org/Pitfalls&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# http://wiki.nginx.org/QuickStart&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# http://wiki.nginx.org/Configuration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Generally, you will want to move this file somewhere, and start with a clean&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# file but keep this around for reference. Or just disable in sites-enabled.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;##&lt;/span&gt;
   
&lt;span class=&quot;c1&quot;&gt;# Default server configuration&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;server {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;listen 80;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;listen [::]:80;&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# your domain name&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;server_name dongdongbh.tech www.dongdongbh.tech;&lt;/span&gt;
   
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;rewrite ^(.*)$  https://$host$1 permanent;&lt;/span&gt;  
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
   
&lt;span class=&quot;s&quot;&gt;server {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# listen 80;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# listen [::]:80;&lt;/span&gt;
   
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# SSL configuration for https&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;   	&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;listen 443 ssl default_server;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;listen [::]:443 ssl default_server;&lt;/span&gt;
   
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# put your ssl certificate file under /etc/nginx/cert directory and set here&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# or you can follow the ssl vendor's instruction&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# ssl on;	&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ssl_certificate   cert/xxxxxxxxxxxx.pem;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;ssl_certificate_key  cert/xxxxxxxxxxxx.key;&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ssl_session_timeout 5m;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;ssl_protocols TLSv1 TLSv1.1 TLSv1.2;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;ssl_prefer_server_ciphers on;&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Self signed certs generated by the ssl-cert package&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Don't use them in a production server!&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#include snippets/snakeoil.conf;&lt;/span&gt;
   
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# your site location&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;root /var/www/mysite;&lt;/span&gt;
   
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Add index.php to the list if you are using PHP&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;index index.html index.htm index.nginx-debian.html;&lt;/span&gt;
   
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# your domain name&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;server_name dongdongbh.tech www.dongdongbh.tech;&lt;/span&gt;
   
&lt;span class=&quot;err&quot;&gt;	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;location / {&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;		&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# First attempt to serve request as file, then&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;		&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# as directory, then fall back to displaying a 404.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;		&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;try_files $uri $uri/ =404;&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;	}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;setup your git server repository for your site. e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;/srv/git/website.git&lt;/code&gt;. For details, ref &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server&quot;&gt;Setting Up Git Server&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;find(or create) file &lt;code class=&quot;highlighter-rouge&quot;&gt;post-receive&lt;/code&gt; in dir &lt;code class=&quot;highlighter-rouge&quot;&gt;/srv/git/website.git/hooks'&lt;/code&gt; and fill following lines:&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
   
&lt;span class=&quot;nv&quot;&gt;GIT_REPO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/srv/git/website.git
&lt;span class=&quot;nv&quot;&gt;TMP_GIT_CLONE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/tmp/mysite
&lt;span class=&quot;nv&quot;&gt;PUBLIC_WWW&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/www/mysite
   
git clone &lt;span class=&quot;nv&quot;&gt;$GIT_REPO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TMP_GIT_CLONE&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TMP_GIT_CLONE&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;production bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll build &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TMP_GIT_CLONE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$PUBLIC_WWW&lt;/span&gt;
rm &lt;span class=&quot;nt&quot;&gt;-Rf&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$TMP_GIT_CLONE&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;make sure you VPS port 80&amp;amp;443 are opened;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In site directory on your local computer:&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote add server user_name@dongdongbh.tech:/srv/git/website.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;then you can use git to update your website, when push your local updates to your server, your site will automatically update.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>Dongda Li</name><email>dongdongbhbh@gmail.com</email></author><category term="tutorial" /><summary type="html">Create your website on Virtual Private Server(VPS)</summary></entry><entry><title type="html">Reinforcement learning notes</title><link href="https://dongdongbh.tech/RL-note/" rel="alternate" type="text/html" title="Reinforcement learning notes" /><published>2018-12-01T00:00:00+08:00</published><updated>2018-12-01T00:00:00+08:00</updated><id>https://dongdongbh.tech/RL-note</id><content type="html" xml:base="https://dongdongbh.tech/RL-note/">&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#1.Basic&quot;&gt;Basic&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cross-entropy-method&quot;&gt;Cross-entropy method&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tabular-learning&quot;&gt;Tabular Learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#deep-q-learning&quot;&gt;DQN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#policy-gradients&quot;&gt;Policy Gradients&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#Deep-Reinforcement-Learning (Deep RL) in-Natural-Language-Processing (NLP)&quot;&gt;DRL in NLP&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nn-functions&quot;&gt;NN functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;basic&quot;&gt;basic&lt;/h2&gt;

&lt;h5 id=&quot;markov-decision-process-mdp&quot;&gt;Markov Decision Process (MDP)&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/rl/reinforcement-learning-fig1-700.jpg&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;environment, state, observation, reward, action, agent&lt;/p&gt;

&lt;h5 id=&quot;policy&quot;&gt;Policy&lt;/h5&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\pi: S \times A \to [0,1]\\ \label{l1}
\pi(a|s) = P(a_t=a|s_t=s)&lt;/script&gt;

&lt;h5 id=&quot;state-value-function&quot;&gt;State-value function&lt;/h5&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;R = \Sigma_{t = 0}^{\infty}\gamma^tr_t\\ \label{l2}
V_\pi(s) = E[R] = E[\Sigma_{t = 0}^{\infty}\gamma^tr_t|s_0 = s]\\&lt;/script&gt;

&lt;p&gt;where $r_t$ is the reward at step $t$,  $\gamma\in[0,1]$  is the discount-rate.&lt;/p&gt;

&lt;h5 id=&quot;value-function&quot;&gt;Value function&lt;/h5&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;V^\pi(s)  =E[R|s,\pi]\\	\label{l3}
V^*(s) = \max_\pi V^\pi(s)&lt;/script&gt;

&lt;h5 id=&quot;action-value-function&quot;&gt;Action value function&lt;/h5&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;Q^\pi(s,a) = E[R|s,a,\pi]\\ \label{l4}
Q^*(s) = \max_a Q^\pi(s,a)&lt;/script&gt;

&lt;h3 id=&quot;method-classification&quot;&gt;method classification&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;model-based: previous observation &lt;strong&gt;predict&lt;/strong&gt; following rewards and observations&lt;/li&gt;
  &lt;li&gt;model-free: train it by intuition&lt;/li&gt;
  &lt;li&gt;police-based: &lt;strong&gt;directly&lt;/strong&gt; approximating the policy of the agent&lt;/li&gt;
  &lt;li&gt;value-based: the agent calculates the &lt;strong&gt;value of every possible action&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;off police: the ability of the method to learn on old &lt;strong&gt;historical data&lt;/strong&gt; (obtained&lt;/li&gt;
  &lt;li&gt;on police: requires &lt;strong&gt;fresh data&lt;/strong&gt; obtained from the environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;police-based-method&quot;&gt;Police-based method&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;just like a classification problem&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;NN input: observation&lt;/li&gt;
  &lt;li&gt;NN output: distribution of actions&lt;/li&gt;
  &lt;li&gt;agent: random choose action base on distribution of actions(police)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cross-entropy-method&quot;&gt;cross-entropy method&lt;/h2&gt;

&lt;h4 id=&quot;steps&quot;&gt;steps:&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Play N number of episodes using our current model and environment.&lt;/li&gt;
  &lt;li&gt;Calculate the total reward for every episode and decide on a reward boundary. Usually, we use some percentile of all rewards, such as 50th or 70th.&lt;/li&gt;
  &lt;li&gt;Throw away all episodes with a reward below the boundary.&lt;/li&gt;
  &lt;li&gt;Train on the remaining “elite” episodes using observations as the input and issued actions as the desired output.&lt;/li&gt;
  &lt;li&gt;Repeat from step 1 until we become satisfied with the result.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;use &lt;strong&gt;cross-entropy loss&lt;/strong&gt; function as loss function&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;drawback:&lt;/strong&gt; Cross-entropy methods have difficult to understand which step or which state is good and which is not good, it just know overall this episode is better or not&lt;/p&gt;

&lt;h2 id=&quot;tabular-learning&quot;&gt;tabular learning&lt;/h2&gt;

&lt;h3 id=&quot;why-using-q-but-not-v&quot;&gt;Why using Q but not V?&lt;/h3&gt;

&lt;p&gt;​	if I know the value of current state, I know the state is good or not, but I don’t know how to choose next action, even I know the V of all next state, I &lt;strong&gt;can not directly&lt;/strong&gt; know which action i need to do, so we decide action base on Q.&lt;/p&gt;

&lt;p&gt;​	if I know Q of all available action, we just choose the action which has max Q, then this action surely has max V according the definition of V(the relationship of Q and V).&lt;/p&gt;

&lt;h3 id=&quot;the-value-iteration-in-the-env-with-a-loop&quot;&gt;The value iteration in the Env with a loop&lt;/h3&gt;

&lt;p&gt;If there is no $\gamma (\gamma = 1)$ and the environment has a loop, the value of state will be infinite.&lt;/p&gt;

&lt;h3 id=&quot;problems--in-q-learning&quot;&gt;problems  in Q-learning&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;state is not discrete&lt;/li&gt;
  &lt;li&gt;state space is is very large&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;don’t know probability of action and reward matrix (P(s’,r&lt;/td&gt;
          &lt;td&gt;s,a)).&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;value-iteration&quot;&gt;Value iteration&lt;/h3&gt;

&lt;h4 id=&quot;reward-table&quot;&gt;Reward table&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;index: “source state” + “action” + “target state”&lt;/li&gt;
  &lt;li&gt;value: reward&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;transition-table&quot;&gt;Transition table&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;index: “state” + “action”&lt;/li&gt;
  &lt;li&gt;value:  index: state  value: counts&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;value-table&quot;&gt;Value table&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;index: state&lt;/li&gt;
  &lt;li&gt;value:  value of state&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;steps-1&quot;&gt;Steps&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;random action to build reward and transitions table&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;perform a value iteration loop over all state&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;play several full episodes to choose the best action using the updated value table, at the same time, update reward and transitions table using new data.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;**Problems of separating training and testing **: When using the previous steps, you actually separate training and testing, it may has another problem, since the task may be difficult,using random action is hard to reach the final state, so you may lack some states which are near the final step. So, maybe you should conduct training and testing at the same time, and add some exploit into testing.&lt;/p&gt;

&lt;h3 id=&quot;q-learning&quot;&gt;Q-learning&lt;/h3&gt;

&lt;p&gt;Different to value iteration,Q-learn change the value table to Q value table:&lt;/p&gt;

&lt;h4 id=&quot;q-value-table&quot;&gt;Q value table&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;index:  “state” + “action”&lt;/li&gt;
  &lt;li&gt;value:  action value(Q)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here :
&lt;script type=&quot;math/tex&quot;&gt;V(s) =  \mathop{\arg\max}_{a}Q(a,s)&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;deep-q-learning&quot;&gt;deep q-learning&lt;/h2&gt;

&lt;h4 id=&quot;dqn&quot;&gt;DQN:&lt;/h4&gt;

&lt;p&gt;input: state&lt;/p&gt;

&lt;p&gt;output: all action(n actions) value of input state&lt;/p&gt;

&lt;p&gt;classification: off policy, value based and model free&lt;/p&gt;

&lt;h4 id=&quot;problems&quot;&gt;problems:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;how to balance explore&amp;amp;exploit&lt;/li&gt;
  &lt;li&gt;data is not independent and identically distributed(i.i.d), which is required for neural network training.&lt;/li&gt;
  &lt;li&gt;may partially observable MDPs (&lt;strong&gt;POMDP&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;basic-tricks-in-deepmind-2015-paper&quot;&gt;Basic tricks in Deepmind 2015 paper:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;$\epsilon$-greedy to deal with  explore&amp;amp;exploit&lt;/li&gt;
  &lt;li&gt;replay buffer and target network to deal with i.i.d,
    &lt;ul&gt;
      &lt;li&gt;replay buffer make it more random, it random select experience in a replay buffer&lt;/li&gt;
      &lt;li&gt;target network isolated the influence of nearby Q during training&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;several observations as a state to deal with POMDP&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;double-dqn&quot;&gt;Double DQN&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Idea:&lt;/strong&gt; Choosing &lt;strong&gt;actions&lt;/strong&gt; for the next state using the &lt;strong&gt;trained network&lt;/strong&gt; but taking &lt;strong&gt;values of Q from the target net&lt;/strong&gt;.&lt;/p&gt;

&lt;h4 id=&quot;noisy-networks&quot;&gt;Noisy Networks&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Idea:&lt;/strong&gt; Add &lt;strong&gt;a noise to the weights of fully-connected layers&lt;/strong&gt; of the network and adjust the parameters of this noise during training using back propagation. (to replace $\epsilon$-greedy and improve performance)&lt;/p&gt;

&lt;h4 id=&quot;prioritized-replay-buffer&quot;&gt;Prioritized replay buffer&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Idea:&lt;/strong&gt; This method tries to improve the efficiency of samples in the replay buffer by &lt;strong&gt;prioritizing those samples according to the training loss&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trick:&lt;/strong&gt; using loss weight to compensated the distribution bias introduced by priorities.&lt;/p&gt;

&lt;h4 id=&quot;dueling-dqn&quot;&gt;Dueling DQN&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Idea:&lt;/strong&gt; The Q-values Q(s, a) our network is trying to approximate can be divided into quantities: the value of the state V(s) and the advantage of actions in this state A(s, a).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trick:&lt;/strong&gt; the mean value of the advantage of any state to be zero.&lt;/p&gt;

&lt;h4 id=&quot;categorical-dqn&quot;&gt;Categorical DQN&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Idea:&lt;/strong&gt; Train the probability distribution of action Q-value rather than the action Q-value&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tricks:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;using generic parametric distribution that is basically a fixed amount of values placed regularly on a values range. every fixed amount of values range calls atom.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;use loss Kullback- Leibler (KL)-divergence&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;policy-gradients&quot;&gt;policy gradients&lt;/h2&gt;

&lt;h3 id=&quot;reinforce&quot;&gt;REINFORCE&lt;/h3&gt;

&lt;h4 id=&quot;idea&quot;&gt;idea&lt;/h4&gt;

&lt;p&gt;Policy Gradient
&lt;script type=&quot;math/tex&quot;&gt;\Delta J \approx E[Q(s,a)\Delta\log\pi(a|s)] \label{l5}&lt;/script&gt;
loss formula
&lt;script type=&quot;math/tex&quot;&gt;loss = -Q(s,a)\log\pi(a|s) \label{l6}&lt;/script&gt;
Increase the probability of actions that have given us good total reward and decrease the probability of actions with bad final outcomes.
&lt;script type=&quot;math/tex&quot;&gt;{split}
\pi(a|s)&gt;0\\
-\log\pi(a|s) &gt; 0 \label{l7}&lt;/script&gt; {split}&lt;/p&gt;
&lt;h4 id=&quot;problems-1&quot;&gt;&lt;strong&gt;problems:&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;one training need full episodes since require Q from finished episode&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;High gradients variance, long steps episode have larger Q than short one&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;converge to some locally-optimal policy since lack of exploration&lt;/li&gt;
  &lt;li&gt;not i.i.d. Correlation between samples&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;basic-tricks&quot;&gt;basic tricks&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;learning Q(Actor-Critic)&lt;/li&gt;
  &lt;li&gt;subtracting a value called baseline from the Q to avoid high gradients variance&lt;/li&gt;
  &lt;li&gt;in order to prevent our agent from being stuck in the local minimum, subtracting the entropy from the loss function, punishing the agent for being too certain about the action to take.&lt;/li&gt;
  &lt;li&gt;parallel environments to reduce &lt;strong&gt;correlation&lt;/strong&gt;, steps from different environments.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;actor--critic&quot;&gt;Actor- Critic&lt;/h3&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation}
\begin{aligned}
Q(s,a) &amp;= \Sigma_{i=0}^{N-1}\gamma^ir_i+\gamma^NV(s_N)\\ 
Loss_{value} &amp;= MSE(V(s),Q(s,a))\\ \label{Q_update}
\end{aligned}
\end{equation} %]]&gt;&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation}
\begin{aligned}
Q(s,a) &amp;= A(s,a)+V(s)\\ 
Loss_{policy} &amp;= -A(s,a)\log\pi(a|s)\\  \label{pg_update}
\end{aligned}
\end{equation} %]]&gt;&lt;/script&gt;

&lt;p&gt;Using equation \ref{Q_update} to train V(s) (Critic) and equation \ref{pg_update} to train policy. We call A(s,a) as advantage,  so it is advantage Actor- Critic (&lt;strong&gt;A2C)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Idea&lt;/strong&gt;: The scale of our gradient will be just advantage A(s, a), we use another neural network, which will approximate V(s) for every observation.&lt;/p&gt;

&lt;h4 id=&quot;implementation&quot;&gt;Implementation&lt;/h4&gt;

&lt;p&gt;In practice, policy and value networks partially overlap, mostly due to the efficiency and convergence considerations. In this case, policy and value are implemented as different heads of the network, taking the output from the common body and transforming it into the probability distribution and a single number representing the value of the state. This helps both networks to share low-level features, but combine them in a different way.&lt;/p&gt;

&lt;h4 id=&quot;tricks&quot;&gt;Tricks&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;add entropy bonus to loss function
&lt;script type=&quot;math/tex&quot;&gt;H_{entropy} = -\Sigma (\pi \log\pi)   \\
Loss_{entropy} = \beta*\Sigma_i (\pi_\theta(s_i)*\log\pi_\theta(s_i)) \label{l10}&lt;/script&gt;&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;the loss function of entropy has a minimum when probability distribution is uniform, so by adding it to the loss function, we’re pushing our agent away from being too certain about its actions.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;using several environments to improve stability&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;gradient clipping to prevents our gradients at optimization stage from becoming too large and pushing our policy too far.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;total-loss-function&quot;&gt;Total Loss function&lt;/h4&gt;

&lt;p&gt;Finally, our loss is the sum of PG, value and entropy loss
&lt;script type=&quot;math/tex&quot;&gt;Loss =Loss_{policy}+Loss_{value}+Loss_{entropy}&lt;/script&gt;&lt;/p&gt;

&lt;h4 id=&quot;asynchronous-advantage-actor-critica3c&quot;&gt;Asynchronous Advantage Actor-Critic(A3C)&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Just using parallel envs to speed up training, there will be some code level tricks to speed up by fully utilizing multiple GPUs and CPUs. For more details, ref some open source implementations on Github.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;deep-reinforcement-learning-deep-rl-in-natural-language-processing-nlp&quot;&gt;Deep Reinforcement Learning (Deep RL) in Natural Language Processing (NLP)&lt;/h2&gt;

&lt;h3 id=&quot;basic-concepts-in-nlp&quot;&gt;Basic concepts in NLP&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Recurrent Neural Networks (RNNs)&lt;/li&gt;
  &lt;li&gt;word embeddings&lt;/li&gt;
  &lt;li&gt;the &lt;strong&gt;seq2seq&lt;/strong&gt; model&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://papers.nips.cc/paper/5542-recurrent-models-of-visual-attention&quot;&gt;Recurrent models of visual attention&lt;/a&gt; (original paper NIPS 2014)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ref. &lt;a href=&quot;http://cs224d.stanford.edu&quot;&gt;CS224d&lt;/a&gt; for more about NLP.&lt;/p&gt;

&lt;h4 id=&quot;rnn&quot;&gt;RNN&lt;/h4&gt;

&lt;p&gt;The idea of an RNN is a network with fixed input and output, which is being applied to the sequence of objects and can pass information along this sequence. This information is called hidden state and is normally just a vector of numbers of some size.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Unfold RNN (unfold by time)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/rl/Recurrent_neural_network_unfold.svg.png&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;RNN produce different output for the same input in different contexts, RNNs can be seen as a standard building block of the systems that need to process variable-length input.&lt;/p&gt;

&lt;h5 id=&quot;lstm&quot;&gt;LSTM&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/rl/800px-Long_Short-Term_Memory.svg.png&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;word-embeddingword2vec&quot;&gt;Word embedding(word2vec)&lt;/h4&gt;

&lt;p&gt;Word and phrase embeddings, is the collective name for a set of language modeling and feature learning techniques in natural language processing (NLP) where &lt;strong&gt;words or phrases from the vocabulary are mapped to vectors of real numbers&lt;/strong&gt;. Conceptually it involves a mathematical embedding from a space with &lt;strong&gt;one dimension per word to a continuous vector space with a much lower dimension&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Methods&lt;/strong&gt; to generate this mapping include neural networks, dimensionality reduction on the word co-occurrence matrix, probabilistic models,  explainable knowledge base method, and explicit representation in terms of the context in which words appear.&lt;/p&gt;

&lt;p&gt;Word embedding is good for NLP tasks  such as syntactic parsing and sentiment analysis. Ref &lt;a href=&quot;https://en.wikipedia.org/wiki/Word_embedding&quot;&gt;word embedding&lt;/a&gt; for details.&lt;/p&gt;

&lt;p&gt;You can use some pretrained dataset or get it by training your own dataset.&lt;/p&gt;

&lt;h4 id=&quot;encoder-decoderseq2seq&quot;&gt;Encoder-Decoder(seq2seq)&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/rl/seq2seq.jpg&quot; width=&quot;70%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;use an RNN to process an input sequence and encode this sequence into some fixed-length representation. This RNN is called an encoder. Then you feed the encoded vector into another RNN, called a decoder, which has to produce the resulting sequence. It is widely used in machine translation.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;teacher-forcing mode&lt;/strong&gt;: decoder input is the target reference&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;curriculum learning mode&lt;/strong&gt;: decoder input is the last out put of previous decoder&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;../assets/images/rl/curriculum learning.jpg&quot; width=&quot;70%&quot; /&gt;&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;curriculum learning mode&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;attention mechanism&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;../assets/images/rl/nmt-model-fast.gif&quot; width=&quot;70%&quot; /&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;seq2seq (picture from Google)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;../assets/images/rl/attention.jpg&quot; width=&quot;70%&quot; /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;attention mechanism (this picture from &lt;a href=&quot;https://zhuanlan.zhihu.com/p/40920384&quot;&gt;zhihu&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;rl-in-seq2seq&quot;&gt;RL in seq2seq&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;sampling from probability distribution, instead of learning some average result&lt;/li&gt;
  &lt;li&gt;score is not differentiable, we still can use PG to update, use score as scale&lt;/li&gt;
  &lt;li&gt;introducing stochasticity into the process of decoding when dataset is limited&lt;/li&gt;
  &lt;li&gt;use argmax score as baseline of Q&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ddpg&quot;&gt;DDPG&lt;/h2&gt;

&lt;p&gt;TBC.&lt;/p&gt;

&lt;h2 id=&quot;model-based-rl&quot;&gt;Model-based RL&lt;/h2&gt;

&lt;p&gt;TBC.&lt;/p&gt;

&lt;h2 id=&quot;nn-functions&quot;&gt;nn functions&lt;/h2&gt;

&lt;h4 id=&quot;sigmoid&quot;&gt;sigmoid&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;&lt;u&gt;It transfer a value input to (0,1)&lt;/u&gt;&lt;/em&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f(x)=\frac{L}{1+e^{-x}} = \frac{e^{x}}{e{x}+1}&lt;/script&gt;

&lt;h4 id=&quot;softmax&quot;&gt;&lt;strong&gt;softmax&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;In short, &lt;em&gt;&lt;u&gt;It transfer K-dimensional vector input to (0,1)&lt;/u&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In mathematics, the softmax function, or normalized exponential function, is a generalization of the logistic function that “squashes” a K-dimensional vector &lt;strong&gt;z&lt;/strong&gt;  of arbitrary real values to a K-dimensional vector  \sigma(&lt;strong&gt;z&lt;/strong&gt;) of real values, where each entry is in the range (0, 1), and all the entries add up to 1.&lt;/p&gt;

&lt;h4 id=&quot;tanh&quot;&gt;tanh&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;&lt;u&gt;It transfer a value input to (-1,1)&lt;/u&gt;&lt;/em&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f(x)=tanh(x)= \frac{e^{x}-e^{-x}}{e^{x}+e^{-x}}&lt;/script&gt;

&lt;h4 id=&quot;relu&quot;&gt;&lt;strong&gt;relu&lt;/strong&gt;&lt;/h4&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;f(x)=max(0,x)&lt;/script&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Maxim Lapan, Deep Reinforcement Learning Hands-On  2018&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Mnih V, Kavukcuoglu K, Silver D, et al. Human-level control through deep reinforcement learning[J]. Nature, 2015, 518(7540): 529.&lt;/li&gt;
  &lt;li&gt;Mnih V, Heess N, Graves A. Recurrent models of visual attention[C]//Advances in neural information processing systems. 2014: 2204-2212.&lt;/li&gt;
  &lt;li&gt;Paszke, Adam and Gross, etc.  Automatic differentiation in PyTorch, 2017&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Dongda Li</name><email>dongdongbhbh@gmail.com</email></author><category term="note" /><summary type="html">Table of contents Basic Cross-entropy method Tabular Learning DQN Policy Gradients DRL in NLP NN functions</summary></entry><entry><title type="html">Convolutional Neural Networks dimension</title><link href="https://dongdongbh.tech/CNN-dimension/" rel="alternate" type="text/html" title="Convolutional Neural Networks dimension" /><published>2018-12-01T00:00:00+08:00</published><updated>2018-12-01T00:00:00+08:00</updated><id>https://dongdongbh.tech/CNN-dimension</id><content type="html" xml:base="https://dongdongbh.tech/CNN-dimension/">&lt;h3 id=&quot;convolution-operation-share-the-convolution-core&quot;&gt;&lt;strong&gt;convolution operation&lt;/strong&gt;: share the convolution core&lt;/h3&gt;

&lt;p&gt;output size is:
&lt;script type=&quot;math/tex&quot;&gt;O = (n-f+1) * (n-f+1)&lt;/script&gt;
where input size is $n\times n$, convolution core size is $f\times f$.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/cnn/convolution_core.gif&quot; alt=&quot;con&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;terms-channels-strides-padding&quot;&gt;&lt;strong&gt;terms&lt;/strong&gt;: channels, strides, padding&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;channels&lt;/strong&gt;: look following picture, the input is  $6\times 6\times 3$ RGB picture, and we use $3\times 3\times 3$  convolution core, the last 3 is the channel number of  convolution core, which is same as the input picture channel number. During convolution, we multiply the input and add it together , so the output size is $4\times 4\times 1$.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/cnn/convolution.png&quot; alt=&quot;cnn&quot; /&gt;&lt;/p&gt;

&lt;p&gt;and we often not only use only one convolution core, we use multi-cores to get multi-features form input. The following image shows the situation that we use two cores, so the output size is $4\times 4\times 2$. Then the input channel of following convolution layer is 2.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/cnn/cnn.png&quot; alt=&quot;cnn&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/cnn/layers.png&quot; alt=&quot;cnn&quot; /&gt;&lt;/p&gt;

&lt;p&gt;output size:
&lt;script type=&quot;math/tex&quot;&gt;O =(n-f+1) * (n-f+1) * C_o&lt;/script&gt;
where $C_o$ is the number of convolution cores(output channel).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;padding&lt;/strong&gt;: add data to the border of input, often to make sure the output size is same as input.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../assets/images/cnn/padding.png&quot; alt=&quot;padding&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;output size:
&lt;script type=&quot;math/tex&quot;&gt;O =(n+2p-f+1) * (n+2p-f+1) * C_o&lt;/script&gt;
where $p$ is padding length of one side. e.g. the last picture $p = 1$.&lt;/p&gt;

    &lt;p&gt;if you want to make sure output size is same as input, set $p = (f-1)/2$, since at this moment, $n-f+2p+1 = n$.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;strides&lt;/strong&gt;: stripe is the moving step length of convolution core.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/cnn/stride.png&quot; alt=&quot;strides&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/cnn/stride-2.png&quot; alt=&quot;strdes&quot; /&gt;&lt;/p&gt;

&lt;p&gt;output size:
&lt;script type=&quot;math/tex&quot;&gt;O =(\frac{n+2p-f}{s}+1) * (\frac{n+2p-f}{s}+1) * C_o&lt;/script&gt;
where $s$ is stride length.&lt;/p&gt;

&lt;h3 id=&quot;demo&quot;&gt;&lt;strong&gt;demo&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/cnn/demo.gif&quot; alt=&quot;cnn&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So lets get the demo’s output size:&lt;/p&gt;

&lt;hr /&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{equation}
\begin{aligned}
p=1\\
s=2\\
S_{input} &amp;= 7*7*3\\
S_{core} &amp;= 3*3*3\\
S_{out} &amp;= (\frac{n+2p-f}{s}+1) * (\frac{n+2p-f}{s}+1) * C_o \\
&amp;= (\frac{7+2-3}{2}+1) * (\frac{7+2-3}{2}+1) * 2 \\&amp;= 4*4*2
\end{aligned}
\end{equation} %]]&gt;&lt;/script&gt;</content><author><name>Dongda Li</name><email>dongdongbhbh@gmail.com</email></author><category term="note" /><summary type="html">convolution operation: share the convolution core</summary></entry><entry><title type="html">Using Google cloud to build a Virtual Private Server (VPS)</title><link href="https://dongdongbh.tech/blog/vps/" rel="alternate" type="text/html" title="Using Google cloud to build a Virtual Private Server (VPS)" /><published>2018-04-19T00:00:00+08:00</published><updated>2018-04-19T00:00:00+08:00</updated><id>https://dongdongbh.tech/blog/vps</id><content type="html" xml:base="https://dongdongbh.tech/blog/vps/">&lt;h1 id=&quot;set-up-a-vps-on-google-cloud&quot;&gt;set up a VPS on Google cloud&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;buy a VM on &lt;a href=&quot;https://cloud.google.com/&quot;&gt;Google cloud&lt;/a&gt; (it has one year free trial now)
 choose Debian Linux and the place near to get fast access (eg, &lt;code class=&quot;highlighter-rouge&quot;&gt;asia-east&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;asia-noutheast&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;use ssh connect VPS (you can use browser ssh or ssh key on terminal)
 if you use terminal ssh, please set up &lt;code class=&quot;highlighter-rouge&quot;&gt;gcloud&lt;/code&gt; first follow this &lt;a href=&quot;https://cloud.google.com/compute/docs/instances/connecting-to-instance?hl=zh-cn&quot;&gt;tutorial&lt;/a&gt;
 use &lt;code class=&quot;highlighter-rouge&quot;&gt;gcloud compute ssh [username]&lt;/code&gt; to connect VPS on terminal&lt;/li&gt;
  &lt;li&gt;configure you VPS&lt;/li&gt;
  &lt;li&gt;configure you client&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;set-up-bbr-and-ssr&quot;&gt;set up BBR and ssr&lt;/h2&gt;
&lt;p&gt;set up BBR and ssr through script on VPS connected by ssh&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;
wget &lt;span class=&quot;nt&quot;&gt;--no-check-certificate&lt;/span&gt; https://github.com/iyuco/scripts/raw/master/bbr.sh
chmod +x bbr.sh
./bbr.sh
./shadowsocksR.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and if you want to create multi-user accounts, the following one is more convenient&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget &lt;span class=&quot;nt&quot;&gt;-N&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-check-certificate&lt;/span&gt; https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssrmu.sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; chmod +x ssrmu.sh &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bash ssrmu.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; Don’t forget set you Google cloud firewall to allow your ssr port in both http and https&lt;/p&gt;

&lt;h2 id=&quot;set-up-linux-pc-client&quot;&gt;set up Linux PC client&lt;/h2&gt;

&lt;h3 id=&quot;set-up-ssr&quot;&gt;set up ssr&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```
wget http://www.djangoz.com/ssr
sudo mv ssr /usr/local/bin
sudo chmod 766 /usr/local/bin/ssr
ssr install
ssr config
```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;using-ssr-on-terminal&quot;&gt;using ssr on terminal&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo apt-get install privoxy&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;edit /etc/privoxy/config, below is an example
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; listen-address localhost:8118
 forward-socks5 /127.0.0.1:1080.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo /etc/init.d/privoxy restart&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;configure terminal environment&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; export http_proxy=&quot;127.0.0.1:8118&quot;
 export https_proxy=&quot;127.0.0.1:8118&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;try &lt;code class=&quot;highlighter-rouge&quot;&gt;wget http://www.google.com&lt;/code&gt; to test.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;chrome-management&quot;&gt;Chrome management&lt;/h3&gt;
&lt;p&gt;if you want to use chrome to manage your redirection, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;Proxy SwitchyOmega&lt;/code&gt; extension.&lt;/p&gt;

&lt;h2 id=&quot;set-up-other-clients&quot;&gt;set up other clients&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;IOS (wingy)&lt;/li&gt;
  &lt;li&gt;Windows (&lt;a href=&quot;https://github.com/shadowsocksr-rm/shadowsocksr-csharp&quot;&gt;ShadowsocksR-win&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;MAC (&lt;a href=&quot;https://github.com/shadowsocks/ShadowsocksX-NG&quot;&gt;ShadowsocksX&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Android(&lt;a href=&quot;https://github.com/milkice233/shadowsocksr-android&quot;&gt;shadowsocksr-android&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Special statement: This tutorial is only for learning and research, thanks.&lt;/strong&gt;&lt;/p&gt;</content><author><name>Dongda Li</name><email>dongdongbhbh@gmail.com</email></author><category term="content" /><category term="tutorial" /><summary type="html">set up a VPS on Google cloud buy a VM on Google cloud (it has one year free trial now) choose Debian Linux and the place near to get fast access (eg, asia-east, asia-noutheast) use ssh connect VPS (you can use browser ssh or ssh key on terminal) if you use terminal ssh, please set up gcloud first follow this tutorial use gcloud compute ssh [username] to connect VPS on terminal configure you VPS configure you client</summary></entry><entry><title type="html">Transfer files over a LAN between two Linux computers</title><link href="https://dongdongbh.tech/markup/file-transport/" rel="alternate" type="text/html" title="Transfer files over a LAN between two Linux computers" /><published>2018-03-23T00:00:00+08:00</published><updated>2018-03-23T00:00:00+08:00</updated><id>https://dongdongbh.tech/markup/file-transport</id><content type="html" xml:base="https://dongdongbh.tech/markup/file-transport/">&lt;h2 id=&quot;netcat--tar-fast-but-not-secure&quot;&gt;netcat + tar (fast but not secure)&lt;/h2&gt;
&lt;p&gt;To send a directory, cd to inside the directory whose contents you want to send on the computer doing the sending and do:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ tar -cz . | nc -q 10 -l -p 45454&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;On the computer receiving the contents, cd to where you want the contents to appear and do:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ nc -w 10 $REMOTE_HOST 45454 | tar -xz&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;$REMOTE_HOST&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;ip / hostname&lt;/code&gt; of computer doing the sending. You can also use a different port instead of 45454.&lt;/p&gt;

&lt;h2 id=&quot;copying-files-with-ssh&quot;&gt;Copying Files with SSH&lt;/h2&gt;
&lt;p&gt;cmd:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ scp &amp;lt;file&amp;gt; &amp;lt;username&amp;gt;@&amp;lt;IP address or hostname&amp;gt;:&amp;lt;Destination&amp;gt;
$ scp -r (recursive) username@server:(remote location) (local location)
$ scp -r (local location) username@server:(remote location)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;using-sshfs&quot;&gt;Using sshfs&lt;/h2&gt;

&lt;p&gt;install&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install sshfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;mounting-the-remote-file-system&quot;&gt;Mounting the Remote File System&lt;/h3&gt;

&lt;p&gt;format: &lt;code class=&quot;highlighter-rouge&quot;&gt;sshfs -o transform_symlinks -ofollow_symlinks  user@hostname: [dir]mountpoint&lt;/code&gt;. e.g. :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sshfs –o &lt;span class=&quot;nv&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;yes,allow_other user@192.168.1.200:/home/user/code home/user/code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;for detail, ref  &lt;code class=&quot;highlighter-rouge&quot;&gt;man sshfs&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;unmount&quot;&gt;unmount&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo umount mountpoint
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Dongda Li</name><email>dongdongbhbh@gmail.com</email></author><category term="content" /><category term="tutorial" /><summary type="html">netcat + tar (fast but not secure) To send a directory, cd to inside the directory whose contents you want to send on the computer doing the sending and do:</summary></entry><entry><title type="html">link tty port on linux</title><link href="https://dongdongbh.tech/markup/link-tty-port-on-linux/" rel="alternate" type="text/html" title="link tty port on linux" /><published>2018-03-03T00:00:00+08:00</published><updated>2018-03-03T00:00:00+08:00</updated><id>https://dongdongbh.tech/markup/link-tty-port-on-linux</id><content type="html" xml:base="https://dongdongbh.tech/markup/link-tty-port-on-linux/">&lt;h3 id=&quot;how-to-link-node-name-with-a-custom-name&quot;&gt;How to link node name with a custom name&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;run next cmd to see the port device
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ udevadm info -a -n /dev/ttyUSB0  $(udevadm info -q path -n /dev/ttyUSB0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Then open (or create) a file in /etc/udev/rules.d/ (named, for example, serial-symlinks.rules), and put the udev rule there.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo subl /etc/udev/rules.d/serial-symlinks.rules
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;…you can write this rule:
    &lt;blockquote&gt;
      &lt;p&gt;ACTION==”add”, ATTRS{idVendor}==”0403”, ATTRS{idProduct}==”6001”, SYMLINK+=”tty-xxx”    //some attrs to lock specific USB device&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;then your ttyUSB0 can using the new name “tty-xxx”&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;and restart udev using
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo service udev restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;so-the-step-as-follows&quot;&gt;so the step as follows:&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ udevadm info -a -n /dev/ttyUSB0
$ sudo subl /etc/udev/rules.d/serial-symlinks.rules
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;modify the file&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo service udev restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;using following cmd check it&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ls /dev/tty*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Dongda Li</name><email>dongdongbhbh@gmail.com</email></author><category term="content" /><category term="tutorial" /><summary type="html">How to link node name with a custom name run next cmd to see the port device $ udevadm info -a -n /dev/ttyUSB0 $(udevadm info -q path -n /dev/ttyUSB0) Then open (or create) a file in /etc/udev/rules.d/ (named, for example, serial-symlinks.rules), and put the udev rule there. $ sudo subl /etc/udev/rules.d/serial-symlinks.rules …you can write this rule: ACTION==”add”, ATTRS{idVendor}==”0403”, ATTRS{idProduct}==”6001”, SYMLINK+=”tty-xxx” //some attrs to lock specific USB device</summary></entry><entry><title type="html">ssh connection</title><link href="https://dongdongbh.tech/markup/ssh-usage/" rel="alternate" type="text/html" title="ssh connection" /><published>2018-03-02T00:00:00+08:00</published><updated>2018-03-02T00:00:00+08:00</updated><id>https://dongdongbh.tech/markup/ssh-usage</id><content type="html" xml:base="https://dongdongbh.tech/markup/ssh-usage/">&lt;h1 id=&quot;insatll-and-configuration&quot;&gt;Insatll and configuration&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ apt-get install openssh-server
$ sudo subl /etc/ssh/sshd_config
$ sudo service ssh restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;show-gui&quot;&gt;Show gui&lt;/h2&gt;
&lt;h3 id=&quot;on-server&quot;&gt;On server&lt;/h3&gt;
&lt;p&gt;config on /etc/ssh/sshd_config&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;X11Forwarding yes&lt;/li&gt;
  &lt;li&gt;X11DisplayOffset 10&lt;/li&gt;
  &lt;li&gt;X11UseLocalhost no&lt;/li&gt;
  &lt;li&gt;ForwardAgent yes&lt;/li&gt;
  &lt;li&gt;ForwardX11 yes&lt;/li&gt;
  &lt;li&gt;ForwardX11Trusted yes&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;on-client&quot;&gt;On client&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh -X remote_host(ip)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;test&quot;&gt;test&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh -X user@host_ip
$ xclock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;file-transfer&quot;&gt;File transfer&lt;/h2&gt;
&lt;p&gt;cmd:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ scp &amp;lt;file&amp;gt; &amp;lt;username&amp;gt;@&amp;lt;IP address or hostname&amp;gt;:&amp;lt;Destination&amp;gt;
$ scp -r (recursive) username@server:(remote location) (local location)
$ scp -r (local location) username@server:(remote location)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Dongda Li</name><email>dongdongbhbh@gmail.com</email></author><category term="content" /><category term="tutorial" /><summary type="html">Insatll and configuration $ apt-get install openssh-server $ sudo subl /etc/ssh/sshd_config $ sudo service ssh restart Show gui On server config on /etc/ssh/sshd_config X11Forwarding yes X11DisplayOffset 10 X11UseLocalhost no ForwardAgent yes ForwardX11 yes ForwardX11Trusted yes</summary></entry><entry><title type="html">Some useful resource links</title><link href="https://dongdongbh.tech/resource/useful-resource-link/" rel="alternate" type="text/html" title="Some useful resource links" /><published>2018-02-20T00:00:00+08:00</published><updated>2018-02-20T00:00:00+08:00</updated><id>https://dongdongbh.tech/resource/useful-resource-link</id><content type="html" xml:base="https://dongdongbh.tech/resource/useful-resource-link/">&lt;h2 id=&quot;tutorials-set&quot;&gt;Tutorials set&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ryanstutorials.net/&quot;&gt;Ryan’s Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;technical&quot;&gt;Technical&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ryanstutorials.net/linuxtutorial/&quot;&gt;Linux Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ryanstutorials.net/regular-expressions-tutorial/regular-expressions-basics.php&quot;&gt;Bash Scripting Tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ryanstutorials.net/regular-expressions-tutorial/regular-expressions-basics.php&quot;&gt;Regular Expressions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;philosophy&quot;&gt;Philosophy&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ryanstutorials.net/problem-solving-skills/&quot;&gt;Problem Solving Skills&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ryanstutorials.net/graphic-design-tutorial/&quot;&gt;Graphic Design Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;for-fun&quot;&gt;For fun&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ryanstutorials.net/rubiks-cube-tutorial/&quot;&gt;Rubik’s Cube Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Dongda Li</name><email>dongdongbhbh@gmail.com</email></author><category term="tutorial" /><summary type="html">Tutorials set Ryan’s Tutorials</summary></entry><entry><title type="html">Markup: HTML Tags and Formatting</title><link href="https://dongdongbh.tech/markup/markup-html-tags-and-formatting/" rel="alternate" type="text/html" title="Markup: HTML Tags and Formatting" /><published>2018-02-02T00:00:00+08:00</published><updated>2018-02-02T00:00:00+08:00</updated><id>https://dongdongbh.tech/markup/markup-html-tags-and-formatting</id><content type="html" xml:base="https://dongdongbh.tech/markup/markup-html-tags-and-formatting/">&lt;p&gt;A variety of common markup showing how the theme styles them.&lt;/p&gt;

&lt;h2 id=&quot;header-two&quot;&gt;Header two&lt;/h2&gt;

&lt;h3 id=&quot;header-three&quot;&gt;Header three&lt;/h3&gt;

&lt;h4 id=&quot;header-four&quot;&gt;Header four&lt;/h4&gt;

&lt;h5 id=&quot;header-five&quot;&gt;Header five&lt;/h5&gt;

&lt;h6 id=&quot;header-six&quot;&gt;Header six&lt;/h6&gt;

&lt;h2 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;/h2&gt;

&lt;p&gt;Single line blockquote:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Stay hungry. Stay foolish.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Multi line blockquote with a cite reference:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;People think focus means saying yes to the thing you’ve got to focus on. But that’s not what it means at all. It means saying no to the hundred other good ideas that there are. You have to pick carefully. I’m actually as proud of the things we haven’t done as the things I have done. Innovation is saying no to 1,000 things.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;small&quot;&gt;&lt;cite&gt;Steve Jobs&lt;/cite&gt; — Apple Worldwide Developers’ Conference, 1997&lt;/p&gt;

&lt;h2 id=&quot;tables&quot;&gt;Tables&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Employee&lt;/th&gt;
      &lt;th&gt;Salary&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#&quot;&gt;John Doe&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;$1&lt;/td&gt;
      &lt;td&gt;Because that’s all Steve Jobs needed for a salary.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#&quot;&gt;Jane Doe&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;$100K&lt;/td&gt;
      &lt;td&gt;For all the blogging she does.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#&quot;&gt;Fred Bloggs&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;$100M&lt;/td&gt;
      &lt;td&gt;Pictures are worth a thousand words, right? So Jane × 1,000.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#&quot;&gt;Jane Bloggs&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;$100B&lt;/td&gt;
      &lt;td&gt;With hair like that?! Enough said.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Header1&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Header2&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Header3&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;cell4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;cell5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;cell6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Foot1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Foot2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Foot3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
&lt;/table&gt;

&lt;h2 id=&quot;definition-lists&quot;&gt;Definition Lists&lt;/h2&gt;

&lt;dl&gt;
  &lt;dt&gt;Definition List Title&lt;/dt&gt;
  &lt;dd&gt;Definition list division.&lt;/dd&gt;
  &lt;dt&gt;Startup&lt;/dt&gt;
  &lt;dd&gt;A startup company or startup is a company or temporary organization designed to search for a repeatable and scalable business model.&lt;/dd&gt;
  &lt;dt&gt;#dowork&lt;/dt&gt;
  &lt;dd&gt;Coined by Rob Dyrdek and his personal body guard Christopher “Big Black” Boykins, “Do Work” works as a self motivator, to motivating your friends.&lt;/dd&gt;
  &lt;dt&gt;Do It Live&lt;/dt&gt;
  &lt;dd&gt;I’ll let Bill O’Reilly &lt;a href=&quot;https://www.youtube.com/watch?v=O_HyZ5aW76c&quot; title=&quot;We'll Do It Live&quot;&gt;explain&lt;/a&gt; this one.&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2 id=&quot;unordered-lists-nested&quot;&gt;Unordered Lists (Nested)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;List item one
    &lt;ul&gt;
      &lt;li&gt;List item one
        &lt;ul&gt;
          &lt;li&gt;List item one&lt;/li&gt;
          &lt;li&gt;List item two&lt;/li&gt;
          &lt;li&gt;List item three&lt;/li&gt;
          &lt;li&gt;List item four&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;List item two&lt;/li&gt;
      &lt;li&gt;List item three&lt;/li&gt;
      &lt;li&gt;List item four&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;List item two&lt;/li&gt;
  &lt;li&gt;List item three&lt;/li&gt;
  &lt;li&gt;List item four&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ordered-list-nested&quot;&gt;Ordered List (Nested)&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;List item one
    &lt;ol&gt;
      &lt;li&gt;List item one
        &lt;ol&gt;
          &lt;li&gt;List item one&lt;/li&gt;
          &lt;li&gt;List item two&lt;/li&gt;
          &lt;li&gt;List item three&lt;/li&gt;
          &lt;li&gt;List item four&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;List item two&lt;/li&gt;
      &lt;li&gt;List item three&lt;/li&gt;
      &lt;li&gt;List item four&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;List item two&lt;/li&gt;
  &lt;li&gt;List item three&lt;/li&gt;
  &lt;li&gt;List item four&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;forms&quot;&gt;Forms&lt;/h2&gt;

&lt;form&gt;
  &lt;fieldset&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;legend&amp;gt;Personalia:&amp;lt;/legend&amp;gt;
Name: &amp;lt;input type=&quot;text&quot; size=&quot;30&quot;&amp;gt;&amp;lt;br&amp;gt;
Email: &amp;lt;input type=&quot;text&quot; size=&quot;30&quot;&amp;gt;&amp;lt;br&amp;gt;
Date of birth: &amp;lt;input type=&quot;text&quot; size=&quot;10&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/fieldset&gt;
&lt;/form&gt;

&lt;h2 id=&quot;buttons&quot;&gt;Buttons&lt;/h2&gt;

&lt;p&gt;Make any link standout more when applying the &lt;code class=&quot;highlighter-rouge&quot;&gt;.btn&lt;/code&gt; class.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;btn--success&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Success Button&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;btn&quot;&gt;Default Button&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;btn btn--primary&quot;&gt;Primary Button&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;btn btn--success&quot;&gt;Success Button&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;btn btn--warning&quot;&gt;Warning Button&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;btn btn--danger&quot;&gt;Danger Button&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;btn btn--info&quot;&gt;Info Button&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;btn btn--inverse&quot;&gt;Inverse Button&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;btn btn--light-outline&quot;&gt;Light Outline Button&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Default Button Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn}
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Primary Button Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn .btn--primary}
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Success Button Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn .btn--success}
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Warning Button Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn .btn--warning}
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Danger Button Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn .btn--danger}
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Info Button Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn .btn--info}
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Inverse Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn .btn--inverse}
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Light Outline Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn .btn--light-outline}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;#&quot; class=&quot;btn btn--primary btn--x-large&quot;&gt;X-Large Button&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;btn btn--primary btn--large&quot;&gt;Large Button&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;btn btn--primary&quot;&gt;Default Button&lt;/a&gt;
&lt;a href=&quot;#&quot; class=&quot;btn btn--primary btn--small&quot;&gt;Small Button&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;X-Large Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn .btn--primary .btn--x-large}
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Large Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn .btn--primary .btn--large}
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Default Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn .btn--primary }
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Small Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;#link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;{: .btn .btn--primary .btn--small}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;notices&quot;&gt;Notices&lt;/h2&gt;

&lt;p class=&quot;notice&quot;&gt;&lt;strong&gt;Watch out!&lt;/strong&gt; This paragraph of text has been &lt;a href=&quot;#&quot;&gt;emphasized&lt;/a&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;{: .notice}&lt;/code&gt; class.&lt;/p&gt;

&lt;p class=&quot;notice--primary&quot;&gt;&lt;strong&gt;Watch out!&lt;/strong&gt; This paragraph of text has been &lt;a href=&quot;#&quot;&gt;emphasized&lt;/a&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;{: .notice--primary}&lt;/code&gt; class.&lt;/p&gt;

&lt;p class=&quot;notice--info&quot;&gt;&lt;strong&gt;Watch out!&lt;/strong&gt; This paragraph of text has been &lt;a href=&quot;#&quot;&gt;emphasized&lt;/a&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;{: .notice--info}&lt;/code&gt; class.&lt;/p&gt;

&lt;p class=&quot;notice--warning&quot;&gt;&lt;strong&gt;Watch out!&lt;/strong&gt; This paragraph of text has been &lt;a href=&quot;#&quot;&gt;emphasized&lt;/a&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;{: .notice--warning}&lt;/code&gt; class.&lt;/p&gt;

&lt;p class=&quot;notice--success&quot;&gt;&lt;strong&gt;Watch out!&lt;/strong&gt; This paragraph of text has been &lt;a href=&quot;#&quot;&gt;emphasized&lt;/a&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;{: .notice--success}&lt;/code&gt; class.&lt;/p&gt;

&lt;p class=&quot;notice--danger&quot;&gt;&lt;strong&gt;Watch out!&lt;/strong&gt; This paragraph of text has been &lt;a href=&quot;#&quot;&gt;emphasized&lt;/a&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;{: .notice--danger}&lt;/code&gt; class.&lt;/p&gt;

&lt;h2 id=&quot;html-tags&quot;&gt;HTML Tags&lt;/h2&gt;

&lt;h3 id=&quot;address-tag&quot;&gt;Address Tag&lt;/h3&gt;

&lt;address&gt;
  &lt;p&gt;1 Infinite Loop&lt;br /&gt; Cupertino, CA 95014&lt;br /&gt; United States&lt;/p&gt;
&lt;/address&gt;

&lt;h3 id=&quot;anchor-tag-aka-link&quot;&gt;Anchor Tag (aka. Link)&lt;/h3&gt;

&lt;p&gt;This is an example of a &lt;a href=&quot;http://apple.com&quot; title=&quot;Apple&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;abbreviation-tag&quot;&gt;Abbreviation Tag&lt;/h3&gt;

&lt;p&gt;The abbreviation &lt;abbr title=&quot;Cascading Style Sheets&quot;&gt;CSS&lt;/abbr&gt; stands for “Cascading Style Sheets”.&lt;/p&gt;

&lt;h3 id=&quot;cite-tag&quot;&gt;Cite Tag&lt;/h3&gt;

&lt;p&gt;“Code is poetry.” —&lt;cite&gt;Automattic&lt;/cite&gt;&lt;/p&gt;

&lt;h3 id=&quot;code-tag&quot;&gt;Code Tag&lt;/h3&gt;

&lt;p&gt;You will learn later on in these tests that &lt;code class=&quot;highlighter-rouge&quot;&gt;word-wrap: break-word;&lt;/code&gt; will be your best friend.&lt;/p&gt;

&lt;h3 id=&quot;strike-tag&quot;&gt;Strike Tag&lt;/h3&gt;

&lt;p&gt;This tag will let you &lt;strike&gt;strikeout text&lt;/strike&gt;.&lt;/p&gt;

&lt;h3 id=&quot;emphasize-tag&quot;&gt;Emphasize Tag&lt;/h3&gt;

&lt;p&gt;The emphasize tag should &lt;em&gt;italicize&lt;/em&gt; text.&lt;/p&gt;

&lt;h3 id=&quot;insert-tag&quot;&gt;Insert Tag&lt;/h3&gt;

&lt;p&gt;This tag should denote &lt;ins&gt;inserted&lt;/ins&gt; text.&lt;/p&gt;

&lt;h3 id=&quot;keyboard-tag&quot;&gt;Keyboard Tag&lt;/h3&gt;

&lt;p&gt;This scarcely known tag emulates &lt;kbd&gt;keyboard text&lt;/kbd&gt;, which is usually styled like the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;h3 id=&quot;preformatted-tag&quot;&gt;Preformatted Tag&lt;/h3&gt;

&lt;p&gt;This tag styles large blocks of code.&lt;/p&gt;

&lt;pre&gt;
.post-title {
	margin: 0 0 5px;
	font-weight: bold;
	font-size: 38px;
	line-height: 1.2;
	and here's a line of some really, really, really, really long text, just to see how the PRE tag handles it and to find out how it overflows;
}
&lt;/pre&gt;

&lt;h3 id=&quot;quote-tag&quot;&gt;Quote Tag&lt;/h3&gt;

&lt;p&gt;&lt;q&gt;Developers, developers, developers…&lt;/q&gt; –Steve Ballmer&lt;/p&gt;

&lt;h3 id=&quot;strong-tag&quot;&gt;Strong Tag&lt;/h3&gt;

&lt;p&gt;This tag shows &lt;strong&gt;bold text&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;subscript-tag&quot;&gt;Subscript Tag&lt;/h3&gt;

&lt;p&gt;Getting our science styling on with H&lt;sub&gt;2&lt;/sub&gt;O, which should push the “2” down.&lt;/p&gt;

&lt;h3 id=&quot;superscript-tag&quot;&gt;Superscript Tag&lt;/h3&gt;

&lt;p&gt;Still sticking with science and Albert Einstein’s E = MC&lt;sup&gt;2&lt;/sup&gt;, which should lift the 2 up.&lt;/p&gt;

&lt;h3 id=&quot;variable-tag&quot;&gt;Variable Tag&lt;/h3&gt;

&lt;p&gt;This allows you to denote &lt;var&gt;variables&lt;/var&gt;.&lt;/p&gt;</content><author><name>Dongda Li</name><email>dongdongbhbh@gmail.com</email></author><category term="content" /><category term="tutorial" /><category term="formatting" /><category term="html" /><category term="markup" /><summary type="html">A variety of common markup showing how the theme styles them.</summary></entry><entry><title type="html">Dongdongbh, Launches Site</title><link href="https://dongdongbh.tech/test/dongdong-site-launched/" rel="alternate" type="text/html" title="Dongdongbh, Launches Site" /><published>2018-02-01T00:00:00+08:00</published><updated>2018-02-01T00:00:00+08:00</updated><id>https://dongdongbh.tech/test/dongdong-site-launched</id><content type="html" xml:base="https://dongdongbh.tech/test/dongdong-site-launched/">&lt;p&gt;Well. Finally got around to putting this old website together. Neat thing about it - powered by &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; and I can use Markdown to author my posts. It actually is a lot easier than I thought it was going to be.&lt;/p&gt;</content><author><name>Dongda Li</name><email>dongdongbhbh@gmail.com</email></author><category term="content" /><summary type="html">Well. Finally got around to putting this old website together. Neat thing about it - powered by Jekyll and I can use Markdown to author my posts. It actually is a lot easier than I thought it was going to be.</summary></entry></feed>